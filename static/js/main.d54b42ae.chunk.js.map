{"version":3,"sources":["images/dj.svg","images/sleep.jpg","images/cat-5.svg","components/Header.js","components/Tabs.js","App.js","index.js"],"names":["module","exports","spotifyWebApi","Spotify","Header","params","getHashParams","state","loggedIn","access_token","setAccessToken","e","hashParams","r","q","window","location","search","substring","exec","decodeURIComponent","className","id","src","dj","this","href","Component","Tabs","nowPlaying","artist","name","image","device","volume","top50","getMyCurrentPlaybackState","then","response","currentPlaying","document","getElementById","topList","displayContainer","defaultImage","style","display","setState","sleep","item","artists","album","images","url","volume_percent","status","innerHTML","classList","add","setTimeout","remove","getMyTopTracks","limit","i","top50List","top50Artist","length","items","push","createListItem","song","orderedList","listItem","createElement","textContent","appendChild","onClick","getNowPlaying","background","width","fontSize","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d54b42ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dj.664c716d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleep.563190f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat-5.fd18543b.svg\";","import React, { Component } from 'react';\r\nimport Spotify from 'spotify-web-api-js';\r\nimport dj from '../images/dj.svg';\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nexport default class Header extends Component {\r\n    constructor() {\r\n        super();\r\n        const params = this.getHashParams();    \r\n        \r\n        this.state = {\r\n          loggedIn: params.access_token ? true : false\r\n        }\r\n        // This allows you to access the spotify API\r\n        if(params.access_token){\r\n          spotifyWebApi.setAccessToken(params.access_token)\r\n        }\r\n      }\r\n    \r\n    getHashParams() {\r\n        var hashParams = {};\r\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n            q = window.location.search.substring(1);\r\n        while ( e = r.exec(q)) {\r\n            hashParams[e[1]] = decodeURIComponent(e[2]);\r\n        }\r\n        return hashParams;\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"header\">\r\n                <ul className=\"nav-bar\" id=\"nav-bar\">\r\n                    <li className=\"title\"><img src={dj}/><h1>Spotify Insight</h1></li>\r\n                    { this.state.loggedIn ? \r\n                    <li><a href='https://jimmikedave.github.io/Spotify-Insight/'><button><h2>Log out</h2></button></a></li>\r\n                    :\r\n                    <li><a href='https://spotify-user-info-backend.herokuapp.com/login'><button><h2>Log in</h2></button></a></li>\r\n                    }  \r\n                </ul>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\nimport Spotify from 'spotify-web-api-js';\r\nimport sleep from '../images/sleep.jpg';\r\nimport dj from '../images/dj.svg';\r\nimport cat from '../images/cat-5.svg'\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        const params = this.getHashParams();    \r\n        \r\n        this.state = {\r\n          nowPlaying: {\r\n            artist: 'Not Checked',\r\n            name: 'Not Checked',\r\n            image: '',\r\n            device: '',\r\n            volume: ''\r\n          },\r\n          top50: {\r\n            name: [],\r\n            artist: []\r\n          },\r\n          loggedIn: params.access_token ? true : false\r\n        }\r\n        // This allows you to access the spotify API\r\n        if(params.access_token){\r\n          spotifyWebApi.setAccessToken(params.access_token)\r\n        }\r\n      }\r\n    \r\n    getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.search.substring(1);\r\n    while ( e = r.exec(q)) {\r\n        hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n    }\r\n\r\n    // Retrieve the current song playing.\r\n    getNowPlaying() {\r\n        if(this.state.loggedIn) {\r\n            spotifyWebApi.getMyCurrentPlaybackState()\r\n            .then((response) => {\r\n                const currentPlaying = document.getElementById('current-display');\r\n                const topList = document.getElementById(\"top50-list\");\r\n                const displayContainer = document.getElementById(\"display-container\");\r\n                const defaultImage = document.getElementById(\"default\");\r\n                \r\n                currentPlaying.style.display = \"block\"\r\n                topList.style.display = \"none\";\r\n                displayContainer.style.display = \"block\";\r\n                defaultImage.style.display = \"none\";\r\n                \r\n            if(response === '') {\r\n                this.setState({\r\n                nowPlaying: {\r\n                    name: \"You are not listening to anything at the moment :(\",\r\n                    artist: \"Go throw something on!\",\r\n                    device: \"Nothing\",\r\n                    volume: \"*cricket*\",\r\n                    image: sleep\r\n                }\r\n                })\r\n            } else {\r\n                this.setState({\r\n                nowPlaying: {\r\n                    artist: response.item.artists[0].name,\r\n                    name: response.item.name,\r\n                    image: response.item.album.images[0].url,\r\n                    device: response.device.name,\r\n                    volume: response.device.volume_percent\r\n                }\r\n                })\r\n            }\r\n    \r\n            })\r\n        } else {\r\n            const status = document.getElementById(\"current-status\")\r\n            status.innerHTML = \"Please log into Spotify to view Now Playing\"\r\n            status.classList.add(\"status\")\r\n            \r\n\r\n            setTimeout(() => {\r\n                status.classList.remove(\"status\")\r\n                status.innerHTML = \"\"\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    // Retrieve an array of the user's top 50 tracks.\r\n    getMyTopTracks() {\r\n        if(this.state.loggedIn) {\r\n            spotifyWebApi.getMyTopTracks({limit: 50})\r\n            .then((response) => {      \r\n            var i;\r\n            let top50List = [];\r\n            let top50Artist = [];\r\n            const topList = document.getElementById(\"top50-list\");\r\n            const currentPlaying = document.getElementById(\"current-display\");\r\n            const defaultImage = document.getElementById(\"default\");\r\n    \r\n            topList.style.display = \"block\";\r\n            currentPlaying.style.display = \"none\";\r\n            defaultImage.style.display = \"none\";\r\n    \r\n            if(this.state.top50.name.length === 0) {\r\n                for(i = 0; i < response.items.length; i++) {\r\n                top50List.push(response.items[i].name)\r\n                top50Artist.push(response.items[i].artists[0].name)\r\n                }\r\n        \r\n                if(top50List.length === 50 && top50Artist.length === 50) {\r\n                this.setState({\r\n                    top50: {\r\n                    name: top50List,\r\n                    artist: top50Artist\r\n                    }\r\n                })\r\n                for(i = 0; i < this.state.top50.name.length; i++) {\r\n                    this.createListItem(this.state.top50.name[i], this.state.top50.artist[i])\r\n                }\r\n                }\r\n            }\r\n            })\r\n        } else {\r\n            const status = document.getElementById(\"50-status\")\r\n            status.innerHTML = \"Please log into Spotify to view your Current Top 50 Songs\"\r\n            status.classList.add(\"status\")\r\n            \r\n\r\n            setTimeout(() => {\r\n                status.classList.remove(\"status\")\r\n                status.innerHTML = \"\"\r\n            }, 3000)\r\n        }\r\n        \r\n    }\r\n\r\n    // Turns the top 50 array into an ordered list.  \r\n    createListItem(song, artist) {\r\n        const orderedList = document.getElementById(\"top50\");\r\n        const listItem = document.createElement(\"li\");\r\n\r\n        listItem.textContent = song + \" by \" + artist;\r\n\r\n        orderedList.appendChild(listItem)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"tab\">                \r\n                <div className=\"btn-group\">\r\n                    <button onClick={() => {\r\n                    this.getNowPlaying()\r\n                    }}>\r\n                    <h1>Check Now Playing</h1>\r\n                    </button>\r\n                    <br/>\r\n                    <button onClick={() => {\r\n                    this.getMyTopTracks()\r\n                    }}>\r\n                    <h1>Show Top 50 Songs</h1>\r\n                    </button>\r\n                    {/* <br/>\r\n                    <img src={cat}/> */}\r\n                </div>\r\n                <div id= \"display-container\" className=\"display-container\">\r\n                    <div id=\"default\" className=\"default\">\r\n                        <div id=\"current-status\"></div>\r\n                        <div id=\"50-status\"></div>\r\n                        <img src={dj}/>\r\n                    </div>\r\n                    <div id=\"current-display\" style={{\r\n                        background: this.state.nowPlaying.image,\r\n                        display: 'none'\r\n                        }}>\r\n                        <div>\r\n                            <h1>Now Playing: {this.state.nowPlaying.name}</h1>\r\n                            <h2> By: {this.state.nowPlaying.artist}</h2>\r\n                        </div>\r\n                        <div>\r\n                            <img src={this.state.nowPlaying.image} style={{width:350}}/>\r\n                        </div>\r\n                        <div>\r\n                            <h3>Listening On: {this.state.nowPlaying.device}</h3>\r\n                            <h3>Volume Level: {this.state.nowPlaying.volume}</h3>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"top50-list\" id=\"top50-list\">\r\n                        <ol id=\"top50\" style={{fontSize: 30}}>\r\n                            <h2>Your Current Top 50</h2>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Spotify from 'spotify-web-api-js';\r\nimport Header from './components/Header';\r\nimport Tabs from './components/Tabs';\r\n\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass App extends Component {\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Tabs />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}